{"version":3,"sources":["img/movie.jpg","components/Card/Card.jsx","redux/actions/types.js","api/api.js","redux/actions/movies.js","components/Header/Header.jsx","components/Pagination/Pagination.jsx","App.js","reportWebVitals.js","redux/reducers/movies-reducer.js","redux/store.js","index.js"],"names":["CardItem","type","title","imdbID","poster","year","Card","className","style","width","Img","variant","src","logo","Body","Title","Text","GET_SEARCH_RESULT","SET_CURRENT_PAGE","instance","axios","create","baseURL","API_KEY","moviesAPI","movieRequest","page","get","then","resp","data","getMoviesTC","currentPage","dispatch","Response","payload","Header","userRequest","setuserRequest","useDispatch","searchInput","React","createRef","useEffect","request","current","value","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Form","inline","FormControl","onChange","ref","placeholder","Paginator","totalCount","pageSize","portionSize","pagesCount","Math","ceil","pages","i","push","pagesPortion","useState","portionNumber","setPortionNumber","leftBorderPortionNum","rightBorderPortionNum","elemsPagination","filter","map","Pagination","Item","onClick","handleCurrentPage","setCurrentPageAC","First","Prev","disabled","Next","Last","App","useSelector","movies","cardList","movie","Type","Poster","Year","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","moviesReducer","state","action","Search","totalResults","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98e7e51e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/movie.8ead54c2.jpg\";","import React from 'react';\nimport { Card} from 'react-bootstrap';\nimport logo from '../../img/movie.jpg';\n\nfunction CardItem({type, title, imdbID, poster, year}) {\n\n    return (\n        <>\n        <Card className=\"mt-3\" style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={poster === \"N/A\" ? logo : poster} />\n            <Card.Body>\n                <Card.Title>Title: {title}</Card.Title>\n                <Card.Text>\n                    <div className=\"year\">Year: {year}</div>\n                    <div className=\"imdbID\">imdbID: {imdbID}</div>\n                    <div className=\"type\">Type: {type}</div>\n                </Card.Text>\n            </Card.Body>\n        </Card>\n        </>\n    )\n}\n\nexport default CardItem\n","export const GET_SEARCH_RESULT = 'GET_SEARCH_RESULT';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const CHANGE_VALUE_INPUT = 'CHANGE_VALUE_INPUT';\n\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://www.omdbapi.com'\n})\nconst API_KEY = '8523cbb8';\n\nexport const moviesAPI = {\n    getMovies(movieRequest, page = 1){\n        if(page) {\n            return instance.get(`/?i=tt3896198&apikey=${API_KEY}&s=${movieRequest}&page=${page}`)\n            .then(resp => resp.data);\n        }\n    }\n}","import {GET_SEARCH_RESULT, SET_CURRENT_PAGE, CHANGE_VALUE_INPUT} from './types';\nimport {moviesAPI} from '../../api/api';\n\nexport const getSearchResultsAC = (searchResult) => {\n    return {\n        type: GET_SEARCH_RESULT,\n        payload: searchResult\n    }\n}\n\nexport const setCurrentPageAC = (page) => {\n    return {\n        type: SET_CURRENT_PAGE,\n        payload: page\n    }\n}\n\nexport const changeValueInputAC = (text) => {\n    return {\n        type: CHANGE_VALUE_INPUT,\n        payload: text\n    }\n}\n\n\n\n//THUNK CREATORS\n\nexport const getMoviesTC = (movieRequest, currentPage) => (dispatch) => {\n    moviesAPI.getMovies(movieRequest, currentPage)\n        .then(resp => {\n            if(resp.Response === \"True\") {\n                dispatch(getSearchResultsAC(resp));\n            }\n        })\n}","import React, { useEffect } from 'react';\nimport {useDispatch} from 'react-redux';\nimport { Navbar, Form, FormControl } from 'react-bootstrap';\nimport {getMoviesTC} from '../../redux/actions/movies';\n\nconst Header = ({userRequest, setuserRequest, currentPage}) => {\n    const dispatch = useDispatch()\n    const searchInput = React.createRef();\n\n    const getMovies = () => {\n        let request = searchInput.current.value;\n        setuserRequest(request);\n        dispatch(getMoviesTC(request, currentPage)); \n    }\n    \n    useEffect(() => {\n        let request = searchInput.current.value;\n        dispatch(getMoviesTC(request, currentPage)); \n    }, [currentPage])\n    \n\n    return (\n        <header className=\"header\">\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#home\">Movie catalog</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Form inline>\n                        <FormControl onChange={getMovies} value={userRequest} ref={searchInput} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    </Form>\n                </Navbar.Collapse>\n                <div className=\"userInfo\">\n                    Alexander Borisenko\n                </div>\n            </Navbar>\n      </header>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport { useState } from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\nimport { useDispatch } from 'react-redux';\nimport { setCurrentPageAC } from '../../redux/actions/movies';\n\nfunction Paginator({totalCount, currentPage, pageSize, portionSize}) {\n    const dispatch = useDispatch()\n\n    // Получаем кол-во всех страниц в пагинации\n    const pagesCount = Math.ceil(totalCount/pageSize);\n    const pages = [];\n    for(let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    // Получаем кол-во порций страниц \n    const pagesPortion = Math.ceil(pagesCount / portionSize);\n\n    //Получаем номер необходимой порции\n    const [portionNumber, setPortionNumber] = useState(1);\n\n    // Получаем левую и правую границы порции страниц\n    const leftBorderPortionNum = (portionNumber - 1) * portionSize + 1;\n    const rightBorderPortionNum = portionNumber * portionSize\n\n    // Получаем необходимую нам порцию страниц для отображения\n\n    const pagesPortionArr = pages.filter(page => leftBorderPortionNum <= page && page <= rightBorderPortionNum)\n\n    // Получаем элементы пагинации для отображения\n    const elemsPagination = pagesPortionArr.map(page => <Pagination.Item \n        key={page} \n        onClick={() => handleCurrentPage(page)} \n        className={page === currentPage && 'active'}>\n            {page}</Pagination.Item>);\n    \n\n    const handleCurrentPage = (page) => {\n        dispatch(setCurrentPageAC(page));\n    }\n\n    return (\n        <div>\n            <Pagination>\n                <Pagination.First onClick={() => setPortionNumber(1)} />\n                <Pagination.Prev disabled={portionNumber === 1} onClick={() => setPortionNumber(portionNumber - 1)}/>\n                    {elemsPagination}\n                <Pagination.Next disabled={portionNumber === pagesPortion} onClick={() => setPortionNumber(portionNumber + 1)} />\n                <Pagination.Last onClick={() => setPortionNumber(pagesPortion)} />\n            </Pagination>\n        </div>\n    )\n}\n\nexport default Paginator\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport CardItem from './components/Card/Card';\nimport Header from './components/Header/Header';\nimport Paginator from './components/Pagination/Pagination';\n\nfunction App() {\n\n    const {movies, totalCount, currentPage, pageSize, portionSize} = useSelector(({movies}) => movies)\n\n    const cardList = movies.map(movie => (\n        <CardItem\n            key={movie.imdbID}\n            title={movie.Title}\n            imdbID={movie.imdbID}\n            type={movie.Type}\n            poster={movie.Poster}\n            year={movie.Year}/>\n    ))\n\n    const [userRequest, setuserRequest] = useState('')\n\n\n    return (\n        <div className=\"App\">\n            <Header currentPage={currentPage} userRequest={userRequest} setuserRequest={setuserRequest}/>\n            {userRequest\n                ? (\n                    <div className=\"container resultText mt-5 mb-5\">\n                        <h2>You searched for: {userRequest}, {totalCount} results found</h2>\n                    </div>\n                )\n                : (\n                    <div className=\"container resultText mt-5 mb-5\">\n                        <h2>Input your request in search</h2>\n                    </div>\n                )\n\n            }\n\n            <div className=\"paginatorContainer mt-3\">\n                {cardList.length === 0\n                    ? ''\n                    : <Paginator className=\"container\"\n                                 totalCount={totalCount}\n                                 currentPage={currentPage}\n                                 pageSize={pageSize}\n                                 portionSize={portionSize}\n                    />\n                }\n            </div>\n            <div className=\"cardsContainer container mt-5 mb-4\">\n                {cardList}\n            </div>\n            <div className=\"paginatorContainer mt-3\">\n                {cardList.length === 0\n                    ? ''\n                    : <Paginator className=\"container mt-5\"\n                                 totalCount={totalCount}\n                                 currentPage={currentPage}\n                                 pageSize={pageSize}\n                                 portionSize={portionSize}\n                    />\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {GET_SEARCH_RESULT, SET_CURRENT_PAGE, CHANGE_VALUE_INPUT} from '../actions/types';\n\nconst initialState = {\n    movies: [],\n    userRequest: '',\n    totalCount: 0,\n    currentPage: 1, \n    pageSize: 10, \n    portionSize: 10\n}\n\nconst moviesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_SEARCH_RESULT: {\n            if(action.payload.Search && action.payload.Search.length > 0) {\n                return {\n                    ...state,\n                    movies: [...action.payload.Search], \n                    totalCount: action.payload.totalResults,\n                }\n            }\n            return {\n                ...state\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.payload\n            }\n        }\n\n        // case CHANGE_VALUE_INPUT: {\n        //     return {\n        //         ...state,\n        //         userRequest: action.payload\n        //     }\n        // }\n\n        default: return state\n    }\n}\n\nexport default moviesReducer;","import { combineReducers, createStore, compose } from 'redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport moviesReducer from './reducers/movies-reducer';\n\nconst reducers = combineReducers({\n    movies: moviesReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(compose(applyMiddleware(thunk))));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n        <Provider store={store}>\n          <App />\n        </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}